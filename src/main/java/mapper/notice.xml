<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.notice">
	<insert id="insertNotice" parameterType="notice">
		INSERT INTO notice
		(title, content, is_pinned, file_no, u_no) VALUES (#{title},
		#{content}, #{isPinned}, #{fileNo, jdbcType=INTEGER}, #{uNo})
	</insert>
	<select id="selectNoticeList" parameterType="map"
		resultType="notice">
		SELECT n.*,m.username AS uNm FROM notice n
		JOIN member m ON n.u_no = m.u_no
		WHERE n.is_pinned = #{isPinned}
		AND (
		<!-- 로그인한 사용자가 DOCTOR가 아닌 경우: 모든 글 조회 -->
		(SELECT user_type FROM member WHERE u_no = #{uNo}) != 'DOCTOR'

		<!-- 로그인한 사용자가 DOCTOR인 경우: 본인 글이거나 같은 병원(h_no) 소속 글만 조회 -->
		OR (
		(SELECT user_type FROM member WHERE u_no = #{uNo}) = 'DOCTOR'
		AND (
		n.u_no = #{uNo}
		OR m.h_no = (SELECT h_no FROM member WHERE u_no = #{uNo})
		)
		)
		)

		<if test="keyword != null and keyword != ''">
			AND (
			n.title LIKE CONCAT('%', #{keyword}, '%')
			OR n.content
			LIKE
			CONCAT('%', #{keyword}, '%')
			)
		</if>

		<choose>
			<when test="sort == 'title'">
				ORDER BY n.title DESC
			</when>
			<otherwise>
				ORDER BY n.n_created DESC
			</otherwise>
		</choose>

		<choose>
			<when test="isPinned == 1">
				LIMIT 3
			</when>
			<otherwise>
				LIMIT #{row}, ${8-topCnt}
			</otherwise>
		</choose>
	</select>
	<!-- 현재글 -->
	<select id="selectNoticeDetail" parameterType="Integer"
		resultType="notice">
		SELECT n.*, f.file_name FROM notice n
		LEFT JOIN file f USING(file_no)
		WHERE n_no = #{nNo} 

	</select>

	<!-- 이전글 -->
	<select id="selectPrev" parameterType="map"
		resultType="otherNotice">
		SELECT n.n_no,n.title
		FROM notice n
		JOIN member m ON n.u_no = m.u_no
		WHERE n_no &lt; #{nNo} 
		AND (
			<!-- 로그인한 사용자가 DOCTOR가 아닌 경우: 모든 글 조회 -->
			(SELECT user_type FROM member WHERE u_no = #{uNo}) != 'DOCTOR'
	
			<!-- 로그인한 사용자가 DOCTOR인 경우: 본인 글이거나 같은 병원(h_no) 소속 글만 조회 -->
			OR (
				(SELECT user_type FROM member WHERE u_no = #{uNo}) = 'DOCTOR'
				AND (
					n.u_no = #{uNo}
					OR m.h_no = (SELECT h_no FROM member WHERE u_no = #{uNo})
				)
			)
		)
		ORDER BY n_no DESC
		LIMIT 1
	</select>

	<!-- 다음글 -->
	<select id="selectNext" parameterType="map"
		resultType="otherNotice">
		SELECT n.n_no,n.title
		FROM notice n
		JOIN member m ON n.u_no = m.u_no
		WHERE n_no &gt; #{nNo} 
		AND (
			<!-- 로그인한 사용자가 DOCTOR가 아닌 경우: 모든 글 조회 -->
			(SELECT user_type FROM member WHERE u_no = #{uNo}) != 'DOCTOR'
	
			<!-- 로그인한 사용자가 DOCTOR인 경우: 본인 글이거나 같은 병원(h_no) 소속 글만 조회 -->
			OR (
				(SELECT user_type FROM member WHERE u_no = #{uNo}) = 'DOCTOR'
				AND (
					n.u_no = #{uNo}
					OR m.h_no = (SELECT h_no FROM member WHERE u_no = #{uNo})
				)
			)
		)
		ORDER BY n_no ASC
		LIMIT 1
	</select>
	<select id="selectNoticeCnt" parameterType="Integer"
		resultType="Integer">
		SELECT COUNT(*) FROM
		notice WHERE is_pinned = #{isPinned};
	</select>
	<update id="updateNotice" parameterType="notice">
		UPDATE notice SET
		title=#{title}, content=#{content}, is_pinned=#{isPinned},
		n_updated=now(), file_no=#{fileNo}
		WHERE n_no=#{nNo}
	</update>
	<delete id="delNotice" parameterType="Integer">
		DELETE FROM notice WHERE
		n_no=#{nNo}
	</delete>
	<select id="selectUserNm" parameterType="Integer"
		resultType="String">
		SELECT username FROM member WHERE u_no = #{uNo}
	</select>
</mapper>	